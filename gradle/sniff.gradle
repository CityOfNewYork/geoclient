//
//  Apply Gradle plugin which configures the Maven Animal Sniffer plugin.
//  When added on 2016-12-13, the plugin required special tweaks for
//  Java projects relying on generated sourceSets.
//
//  There does not seem to be a way to configure different sourceSets to be
//  verified with different signatures. Specifically, a way to allow
//    main, generated -> 1.7
//    test -> 1.8
//
//  TODO: Decide whether to use the xvik/gradle-animalsniffer-plugin or copy
//        the approach taken by the Spring Framework build in
//        https://github.com/spring-projects/spring-framework/blob/master/build.gradle
//
//        Spring's approach seems like it would be more straight-forward to
//        check selected sourceSets against different signatures.
//
//  TODO: Investigate whether this plugin's replacement of build listeners is
//        affects the rest of the entire build or just in its own context.
//        See AnimalSniffer.groovy's replaceBuildListener method.
//
apply plugin: 'ru.vyarus.animalsniffer'
animalsniffer {
  // TODO: Depends on file $rootProjectDir/gradle/dependencies.gradle. Bad?
  toolVersion = project.snifferVersion
  ignoreFailures = false
}

//  Declare animalsniffer test configuration here because apparently these
//  closures are depending on a configuration-time order of operations.
configurations {
  testSignature
}

dependencies {
  signature('org.codehaus.mojo.signature:java17:1.0@signature')
  // Custom dependencies using testSignature configuration defined above
  testSignature('org.codehaus.mojo.signature:java18:1.0@signature')
}

//gradle.taskGraph.whenReady {
//  if (project.name == 'geoclient-jni') {
//    //
//    //  Required for the xvik/gradle-animalsniffer-plugin to add the "generated"
//    //  sourceSet compiled class files to the classpath animalsniffer uses when
//    //  "smelling" the "main" sourceSet.
//    //
//    //  This should happen automatically since
//    //  the geoclient-jni project's compileJava task is configured explicity
//    //  to use 'classpath = sourceSets.generated.output.classes'.
//    //
//    //  Without this configuration, execution of the animalSnifferMain fails due
//    //  to undefined references to the generated classes.
//    //
//    tasks.animalsnifferMain {
//      classpath = project.tasks.compileJava.classpath
//    }
//  }
//}

tasks.animalsnifferTest {
  animalsnifferSignatures = project.configurations['testSignature']
}
