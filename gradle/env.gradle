
//
// Project runtime properties  | Environment vars    | Gradle command line OR | gradle.properties
//                             |                     | gradle.properties in   | in $GRADLE_USER_HOME
//                             |                     | root project directory |
ext.gsGeofiles    = resolveProperty('GEOFILES',        'gsGeofiles')       // | geoclient.gsGeofiles
ext.gsIncludePath = resolveProperty('GS_INCLUDE_PATH', 'gsIncludePath')    // | geoclient.gsIncludePath
ext.gsLibraryPath = resolveProperty('GS_LIBRARY_PATH', 'gsLibraryPath')    // | geoclient.gsLibraryPath
ext.jniJavaHome   = resolveProperty('JAVA_HOME',       'jniJavaHome')      // | geoclient.jniJavaHome
ext.gccWinX64Path = resolveProperty('GCC_WIN_X64_PATH','gccWinX64Path')    // | geoclient.gccWinX64Path
                                               
// Adapted from gradle-docker-plugin project file: gradle/publishing.gradle
String resolveProperty(String envVarKey, String projectPropKey) {

  String propValue = System.getenv()[envVarKey]

  if(propValue) {
    return propValue
  }

  if(hasProperty(projectPropKey)) {
    return getProperty(projectPropKey)
  }

  hasProperty("geoclient.${projectPropKey}") ? getProperty("geoclient.${projectPropKey}") : null
}

task runtimeReport {
  doFirst {
    def hlog = { heading ->
      logger.lifecycle("\n${heading}")
      logger.lifecycle("---------------------------------------------------")
    }
    def plog = { cat, k, v ->
      logger.lifecycle("[$cat] $k='$v'")
    }

    hlog("JAVA SYSTEM PROPERTIES")
    def ps = System.properties
    plog("SYSPROP", "java.user.home",     ps["java.user.home"]) 
    plog("SYSPROP", "java.user.dir",      ps["java.user.dir"]) 
    plog("SYSPROP", "java.library.path",  ps["java.library.path"]) 

    hlog("\nENVIRONMENT VARIABLES")
    def ev = System.getenv()
    plog("ENV",     "GEOFILES",           ev["GEOFILES"])
    plog("ENV",     "GS_INCLUDE_PATH",    ev["GS_INCLUDE_PATH"])
    plog("ENV",     "GS_LIBRARY_PATH",    ev["GS_LIBRARY_PATH"])
    plog("ENV",     "JAVA_HOME",          ev["JAVA_HOME"])
    plog("ENV",     "LD_LIBRARY_PATH",    ev["LD_LIBRARY_PATH"])
    plog("ENV",     "PATH",               ev["PATH"])

    hlog("\nPNATIVE PROPERTIES")
    plog("NATIVE",  "gsGeofiles",         gsGeofiles)
    plog("NATIVE",  "gsIncludePath",      gsIncludePath)
    plog("NATIVE",  "gsLibraryPath",      gsLibraryPath)
    plog("NATIVE",  "javaHome",           javaHome)
  }
}
