Package gov.nyc.doitt.gis.geoclient.jni
Import java.io.IOException
ImplPackage gov.nyc.doitt.gis.geoclient.jni
Style InterfaceAndImpl
JavaClass Geoclient

JavaOutputDir @javaOutputDir@
NativeOutputDir @nativeOutputDir@

Ignore geo
IgnoreNot callgeo

CustomJavaCode GeoclientImpl static
CustomJavaCode GeoclientImpl {   
CustomJavaCode GeoclientImpl     //
CustomJavaCode GeoclientImpl     // System.loadLibrary(String): uses the paths specified in Java System variable 'java.library.path'
CustomJavaCode GeoclientImpl     // System.load(String): uses platform-dependant absolute path
CustomJavaCode GeoclientImpl     //
CustomJavaCode GeoclientImpl     // Loads
CustomJavaCode GeoclientImpl     //       lib@jniLibName@.so (on Linux)
CustomJavaCode GeoclientImpl     //       @jniLibName@.dll   (on Windows)
CustomJavaCode GeoclientImpl     //
CustomJavaCode GeoclientImpl     // TODO: Confirm the following:
CustomJavaCode GeoclientImpl     // Both methods add any paths defined by the standard platform-specific lib paths (LD_LIBRARY, PATH, etc.)
CustomJavaCode GeoclientImpl     // to the overall library path that were defined by the environment owning the parent Java process.
CustomJavaCode GeoclientImpl     // 
CustomJavaCode GeoclientImpl     // System.loadLibrary("@jniLibName@");
CustomJavaCode GeoclientImpl     // 
CustomJavaCode GeoclientImpl     try {
CustomJavaCode GeoclientImpl       NativeLibraryLoader.getInstance().loadLibrary(System.getProperty("java.io.tmpdir"));
CustomJavaCode GeoclientImpl     } catch (IOException ioe) {
CustomJavaCode GeoclientImpl       throw new RuntimeException(ioe);
CustomJavaCode GeoclientImpl     }
CustomJavaCode GeoclientImpl }

CustomCCode #include "geoclient.h"

