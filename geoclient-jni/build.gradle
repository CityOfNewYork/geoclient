
sourceSets {
  main {
    java {
      srcDirs = ['src/main/java','src/generated/java']
    }
    resources {
      srcDirs = ['src/main/resources']
    }
  }
}

dependencies {
    //annotationProcessor "org.jogamp.gluegen:gluegen:$gluegenVersion"
    implementation "org.jogamp.gluegen:gluegen:$gluegenVersion"
}

// TODO: replace here and in geoclient-native with a common CopyProcessingSpec
//       or Sync task
task copyJniLib (type: Copy) {
  dependsOn ':geoclient-native:assemble'
    from "${rootProject.localLibsDir}"
    into "${buildDir}/resources/main"
    include '**/libgeoclientjni*.so', '**/geoclientjni*.dll', '**/geoclientjni*.lib'
}

// TODO: figure out why this does not supress the Gradle warning
//compileJava {
//    options.compilerArgs += ["-proc:none"]
//}

processResources.dependsOn copyJniLib

task uberJar(type: Jar) {
  dependsOn assemble
  appendix = 'uber'
  manifest {
    attributes("Implementation-Title": "${project.name}-uber",
               "Implementation-Version": project.version,
               "Main-Class": "gov.nyc.doitt.gis.geoclient.jni.test.JniTest")
  }
  from sourceSets.main.output
  from configurations.runtimeClasspath
    .findAll { it.name.endsWith('jar') }
    .collect { zipTree(it) }
}

artifacts {
  archives jar
}
