/**
 * Copyright 2013 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'eclipse'
    id 'maven-publish'
}

group 'gov.nyc.doitt.gis.geoclient.gradle'
version '1.0.0'

def eclipseBuildDir = file('bin')

eclipse {
  classpath {
    if(eclipseBuildDir != defaultOutputDir.parent) {
        eclipseBuildDir = defaultOutputDir.parent
    }
  }
}

sourceSets {
    functionalTest {
        groovy {
            srcDir file('src/functionalTest/groovy')
        }
        resources {
            srcDir file('src/functionalTest/resources')
        }
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

task functionalTest(type: Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check.dependsOn functionalTest

gradlePlugin {
    testSourceSets sourceSets.functionalTest
    plugins {
        geoclientPlugin {
            id = 'gov.nyc.doitt.gis.geoclient.gradle.geoclient-plugin'
            implementationClass = 'gov.nyc.doitt.gis.geoclient.gradle.GeoclientPlugin'
        }
    }
}

task deleteEclipseBuildDir(type: Delete) {
  delete eclipseBuildDir
}

repositories {
    mavenCentral()
}

dependencies {
    functionalTestImplementation('org.spockframework:spock-core:1.2-groovy-2.5')
}

test {
    testLogging {
        displayGranularity = 3
        events "failed", "skipped", "passed"
        exceptionFormat "full"
        showStandardStreams = true
    }
}

publishing {
    repositories {
        maven {
            url "../maven-repo"
        }
    }
}
