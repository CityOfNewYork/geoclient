apply plugin: 'war'
apply plugin: 'eclipse-wtp'

dependencies {
    compile project(":geoclient-jni")
    compile project(":geoclient-core")
    compile project(":geoclient-parser")
    compile("net.sf.dozer:dozer:$dozerVersion") { exclude(module: "slf4j-log4j12") }
    compile("org.springframework:spring-core:$springVersion") { exclude(module: "commons-logging") }
    compile("org.springframework:spring-context:$springVersion") { exclude(module: "commons-logging") }
    compile("org.springframework:spring-context-support:$springVersion")
    compile("org.springframework:spring-webmvc:$springVersion")
    compile("org.springframework:spring-oxm:$springVersion") { exclude(module: "commons-lang") }
    compile("org.hibernate:hibernate-validator:$hibernateValidatorVersion")
    compile("org.aspectj:aspectjrt:$aspectjrtVersion")
    compile("org.slf4j:slf4j-api:$slf4jVersion")
    compile("com.thoughtworks.xstream:xstream:$xstreamVersion")
    compile("com.fasterxml.jackson.core:jackson-core:$jacksonVersion")
    compile("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
    compile("javax.inject:javax.inject:$javaxInjectVersion")
    compile("org.thymeleaf:thymeleaf:$thymeleafVersion")
    compile("org.thymeleaf:thymeleaf-spring4:$thymeleafVersion")
    compile("joda-time:joda-time:$jodaTimeVersion")
    compile("org.geotools:gt-referencing:$geotoolsVersion") {
      //exclude(group: "javax.media", module: "jai_core")
      exclude(group: "jgridshift", module: "jgridshift")
    }
    compile("org.geotools:gt-main:$geotoolsVersion") {
      exclude(module: "xerces")
      //exclude(group: "javax.media", module: "jai_core")
      exclude(group: "jgridshift", module: "jgridshift")
    }
    compile("org.geotools:gt-epsg-wkt:$geotoolsVersion") {
      //exclude(group: "javax.media", module: "jai_core")
      exclude(group: "jgridshift", module: "jgridshift")
    }
    runtime("org.slf4j:jcl-over-slf4j:$slf4jVersion")
    runtime("org.slf4j:log4j-over-slf4j:$slf4jVersion")
    runtime("ch.qos.logback:logback-core:$logbackVersion")
    runtime("ch.qos.logback:logback-classic:$logbackVersion")

    testCompile("org.springframework:spring-test:$springVersion")
    testCompile("com.jayway.jsonpath:json-path:$jsonPathVersion")

    providedCompile("javax.servlet:jstl:$jstlVersion")
    providedCompile("javax.servlet:javax.servlet-api:$javaxServletApiVersion")
    providedCompile("javax.servlet.jsp:jsp-api:$jspApiVersion")
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'src/main/external'
        }
    }
}

//test {
//  testLogging.showStandardStreams = true
//}

// FIXME Required to avoid encoding error on Windows when platform default:
// Cp1252 is used to read the embedded EPSG file database.
compileJava { options.encoding = 'utf-8' }

// FIXME I'm not excluding anything!
javadoc {
  options.encoding = 'utf-8'
  exclude "${projectDir}/src/main/external/**/*.java"
  source = sourceSets.main.allJava
}

processResources {
  ext.ver = rootProject.version
  from(sourceSets.main.resources) {
    include 'version.properties'
    filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: [version: ver])
  }
}
