plugins {
    id 'war' // Required when building an executable war file
    id 'org.springframework.boot' version '2.7.5'
    id 'geoclient.java-conventions'
    id 'geoclient.test-conventions'
}

dependencies {
    implementation project(':geoclient-jni')
    implementation project(':geoclient-core')
    implementation project(':geoclient-parser')
    implementation('org.apache.commons:commons-text:1.10.0')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    //runtime('org.springframework.boot:spring-boot-properties-migrator')
    //implementation('org.springframework.boot:spring-boot-devtools')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework:spring-oxm') { exclude(module: 'commons-lang') }
    implementation("com.thoughtworks.xstream:xstream:${xstreamVersion}")
    //implementation('joda-time:joda-time')
    testImplementation('org.apache.httpcomponents:httpclient') // formerly 4.5.10
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat:2.7.5')
}

tasks.register('writeVersionProperties', WriteProperties) {
    properties(['jni.version': project.version, 'core.version': project.version, 'parser.version': project.version, 'service.version': project.version])
    outputFile new File(sourceSets.main.output.resourcesDir, 'version.properties')
}

tasks.register('copyRuntimeDiagram', Copy) {
    from("${project.rootDir}/src/doc") {
        include 'geoclient-runtime.png'
    }
    into "${sourceSets.main.output.resourcesDir}/static/images"
}

processResources {
    dependsOn('writeVersionProperties', 'copyRuntimeDiagram')
}

springBoot {
    buildInfo()
    mainClass = 'gov.nyc.doitt.gis.geoclient.service.GeoclientBootApplication'
}

// Uncomment to allow building "non-executable", traditional jar/war file
// Also uncomment classifiers in bootJar/bootWar tasks below
//jar { enabled = true }
//war { enabled = true }

tasks.named('bootJar') {
    //classifier = "boot"
    requiresUnpack "**/geoclient-jni-*.jar"
    manifest {
        from project.sharedManifest
        attributes 'Start-Class': 'gov.nyc.doitt.gis.geoclient.service.GeoclientBootApplication'
    }
    with(project.licenseFilesSpec)
}

// Because the GeoclientBootApplication extends SpringBootServletInitializer,
// the war file _can_also_be_run_in_a_servlet_container_
tasks.named('bootWar') {
    //classifier = "boot"
    requiresUnpack "**/geoclient-jni-*.jar"
    manifest {
        from project.sharedManifest
        attributes 'Start-Class': 'gov.nyc.doitt.gis.geoclient.service.GeoclientBootApplication'
    }
    with(project.licenseFilesSpec)
}

// Temporary fix for Java SystemProperties specified on the command line
// not being used by Gradle or Spring Boot with the JVM used to execute
// the bootRun task. This only seems to occur from within VS Code remote
// container running on debian:bullseye, using Eclipse Temurin Java 8
// installed with sdkman.
//tasks.named('bootRun').get().systemProperties = [ 'gc.jni.version': 'geoclient-jni-2' ]
bootRun {
    args '--spring.profiles.active=bootRun'
    systemProperties = [ 'gc.jni.version': 'geoclient-jni-2' ]
}

//publishing {
//    publications {
//        bootJava(MavenPublication) {
//            artifact bootJar
//            artifact bootWar
//        }
//        //
//        // Add source and javadoc jars to the publication.
//        // Java plugin is configured in $rootDir/build.gradle.
//        //
//        // Although the spring-boot-plugin disables the regular jar task,
//        // this still causes the publish task to warn about output of one
//        // publication overwriting another. To prevent the warning,
//        // configure bootJar to use a classifier.
//        //
//        mavenJava(MavenPublication) {
//            from components.java
//        }
//    }
//}
//
//signing {
//    sign publishing.publications.bootJava
//    sign publishing.publications.mavenJava // Sign source and javadoc jars
//}
