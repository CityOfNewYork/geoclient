plugins {
    id 'org.springframework.boot' version '2.7.12' // Must be in sync with buildSrc/src/main/groovy/geoclient.java-library.conventions.gradle
    id 'geoclient.java-conventions'
    id 'geoclient.test-conventions'
}

dependencies {
    implementation project(':geoclient-jni')
    implementation project(':geoclient-core')
    implementation project(':geoclient-parser')
    implementation('org.apache.commons:commons-text:1.10.0')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework:spring-oxm') { exclude(module: 'commons-lang') }
    implementation("com.thoughtworks.xstream:xstream:${xstreamVersion}")
    testImplementation('org.apache.httpcomponents:httpclient')
}

tasks.register('writeVersionProperties', WriteProperties) {
    properties(['jni.version': project.version, 'core.version': project.version, 'parser.version': project.version, 'service.version': project.version])
    destinationFile = file(new File(sourceSets.main.output.resourcesDir, 'version.properties'))
}

tasks.register('copyRuntimeDiagram', Copy) {
    from("${project.rootDir}/src/doc") {
        include 'geoclient-runtime.png'
    }
    into "${sourceSets.main.output.resourcesDir}/static/images"
}

processResources {
    dependsOn('writeVersionProperties', 'copyRuntimeDiagram')
}

springBoot {
    mainClass = 'gov.nyc.doitt.gis.geoclient.service.GeoclientBootApplication'
}

tasks.named('bootJar') {
    requiresUnpack "**/geoclient-jni-*.jar"
    manifest {
        from project.sharedManifest
        attributes 'Start-Class': 'gov.nyc.doitt.gis.geoclient.service.GeoclientBootApplication'
    }
    with(project.licenseFilesSpec)
}

bootRun {
    args '--spring.profiles.active=bootRun'
    systemProperties = [ 'gc.jni.version': 'geoclient-jni-2' ]
}
