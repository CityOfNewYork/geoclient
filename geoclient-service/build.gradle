plugins {
	id 'org.springframework.boot' //version '2.1.1.RELEASE'
}

//apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'

dependencies {
	implementation project(':geoclient-jni')
	implementation project(':geoclient-core')
	implementation project(':geoclient-parser')
	implementation("org.apache.commons:commons-text:${commonsTextVersion}")
	implementation("com.github.dozermapper:dozer-spring-boot-starter:${dozerVersion}")
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation('org.springframework.boot:spring-boot-starter-validation')
	implementation('org.springframework.boot:spring-boot-devtools')
	implementation('org.springframework:spring-oxm') { exclude(module: 'commons-lang') }
	implementation('com.thoughtworks.xstream:xstream')
	implementation('joda-time:joda-time')
	implementation("org.geotools:gt-referencing:${geotoolsVersion}") {
		exclude(group: "jgridshift", module: "jgridshift")
	}
	implementation("org.geotools:gt-main:${geotoolsVersion}") {
		exclude(module: 'xerces')
		exclude(group: 'jgridshift', module: 'jgridshift')
	}
	implementation("org.geotools:gt-epsg-wkt:${geotoolsVersion}") {
		exclude(group: 'jgridshift', module: 'jgridshift')
	}
	testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
	testImplementation('com.jayway.jsonpath:json-path')
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			srcDir 'src/main/external'
		}
		resources { srcDir 'src/main/resources' }
	}
}

jar { enabled = true }

springBoot { buildInfo() }

bootJar {
	classifier = 'boot'
	mainClassName = 'gov.nyc.doitt.gis.geoclient.service.GeoclientBootApplication'
	//requiresUnpack '**/geoclient-jni-*.jar'
}

// FIXME Required to avoid encoding error on Windows when platform default:
// Cp1252 is used to read the embedded EPSG file database.
compileJava { options.encoding = 'utf-8' }

processResources {
	ext.ver = rootProject.version
	from(sourceSets.main.resources) {
		include 'version.properties'
		filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: [version: ver])
	}
}
