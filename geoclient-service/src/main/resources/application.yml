spring:
    mvc:
        pathmatch:
            use-suffix-pattern: true
            matching-strategy: ant-path-matcher
    thymeleaf:
        enable-spring-el-compiler: true

server:
    servlet:
        context-path: "/geoclient/v2"

logging:
    group:
        geoclient-all:
            - "gov.nyc.doitt.gis.geoclient"
        geoclient-jni:
            - "gov.nyc.doitt.gis.geoclient.jni"
        geoclient-core:
            - "gov.nyc.doitt.gis.geoclient.api"
            - "gov.nyc.doitt.gis.geoclient.cli"
            - "gov.nyc.doitt.gis.geoclient.config"
            - "gov.nyc.doitt.gis.geoclient.function"
            - "gov.nyc.doitt.gis.geoclient.util"
        geoclient-parser:
            - "gov.nyc.doitt.gis.geoclient.parser"
        geoclient-service:
            - "gov.nyc.doitt.gis.geoclient.service"
        spring-all:
            - "org.springframework"
        spring-boot:
            - "org.springframework.boot"
        spring-web:
            - "org.springframework.web"
        thymeleaf:
            - "org.thymeleaf"
        thymeleaf-trace:
            - "org.thymeleaf.TemplateEngine.CONFIG"
            - "org.thymeleaf.TemplateEngine.TIMER"
            - "org.thymeleaf.TemplateEngine.cache.TEMPLATE_CACHE"
        tomcat:
            - "org.apache.catalina, org.apache.coyote"
            - "org.apache.tomcat"

    level:
        root: "WARN"
        geoclient-all: "INFO"
        ## Log native C runtime and JNI configuration at startup
        #geoclient-jni: "DEBUG"
        ## Log XML deserialization into workarea fields at startup
        #gov.nyc.doitt.gis.geoclient.config.xml: "DEBUG"
        ## Log character buffer values from geosupport requests/repsonses
        #gov.nyc.doitt.gis.geoclient.function.GeosupportFunction: "TRACE"
        ## Log request/response HashMaps before/after geosupport call
        #gov.nyc.doitt.gis.geoclient.service.invoker.GeosupportServiceImpl: "DEBUG"

management:
    endpoints:
        enabled-by-default: false
---
#
# Command line for using this profile with the gradle bootRun task:
#
# ./gradlew -Dgc.jni.version=geoclient-jni-2 bootRun --args='--spring.profiles.active=quiet'
#
spring:
    config:
        activate:
            on-profile: "quiet"

logging:
    level:
        geoclient-all: "ERROR"
---
#
# Command line for using this profile with the gradle bootRun task:
#
# ./gradlew -Dgc.jni.version=geoclient-jni-2 bootRun --args='--spring.profiles.active=bootRun'
#
spring:
    config:
        activate:
            on-profile: "bootRun"
    mvc:
        log-request-details: true

server:
    tomcat:
      basedir: "tomcat" # Relative to system temp directory
      accesslog:
          check-exists: true
          directory: "logs" # Relative to basedir
          enabled: true
          suffix: ".log"

logging:
    level:
        spring-all: "INFO"
        #spring-boot: "DEBUG"
        geoclient-service: "INFO"
        #tomcat: "DEBUG"
    file:
        name: "build/bootrun/logs/geoclient.log"

management:
    endpoints:
        enabled-by-default: true
        web:
            exposure:
                include: "*"
