replicaCount: 1
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0
image:
  repository: mlipper/geoclient
  tag: 2.0.0-rc.5
  pullPolicy: IfNotPresent
env:
  open:
    # context path under which geoclient is deployed
    CONTEXT_PATH: /geoclient/v2
    # version of geoclient which defaults to the same value as the image.tag
    GC_VERSION: 2.0.0-rc.5
    # file system location of Geosupport data files which defaults to
    # `$GEOSUPPORT_HOME/fls/`. Trailing slash is required.
    GEOFILES: /opt/geosupport/fls/
    # base file system location where Geosupport is installed on each "host"
    # running Geoclient.
    GEOSUPPORT_HOME: /opt/geosupport
    # file system location of Geosupport shared library files which defaults
    # to `$GEOSUPPORT_HOME/lib`.
    GS_LIBRARY_PATH: /opt/geosupport/lib
    # storage backend, can be one of: local, amazon, google, microsoft
    # (currently only implemented for `local`)
    STORAGE: local
  field:
    # POD_IP: status.podIP

deployment:
  ## Geoclient Deployment annotations
  annotations: {}
  #   name: value
  labels: {}
  #   name: value
  matchlabes: {}
  #   name: value
replica:
  ## Geoclient Replicas annotations
  annotations: {}
  ## Read more about kube2iam to provide access to s3 https://github.com/jtblin/kube2iam
  #   iam.amazonaws.com/role: role-arn
service:
  servicename:
  type: ClusterIP
  externalTrafficPolicy: Local
  ## Limits which cidr blocks can connect to service's load balancer
  ## Only valid if service.type: LoadBalancer
# ## From chartmuseum default:
# loadBalancerSourceRanges: []
  # clusterIP: None
  internalPort: 8080
  externalPort: 8080
  nodePort:
# ## chartmuseum defaults to
# annotations: {}
# ## jx generated:
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: "kubernetes.io/ingress.class: nginx"
  labels: {}

resources: {}
#  limits:
#    cpu: 100m
#    memory: 128Mi
#  requests:
#    cpu: 80m
#    memory: 64Mi

probes:
  liveness:
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3
  readiness:
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3

persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 8Gi
  labels: {}
  path: /storage
  #   name: value
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## Geoclient data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  # volumeName:
  pv:
    enabled: false
    pvname:
    capacity:
      storage: 8Gi
    accessMode: ReadWriteOnce
    nfs:
      server:
      path:

## Ingress for load balancer
ingress:
  enabled: false
## Geoclient Ingress labels
##
#   labels:
#     dns: "route53"

## Geoclient Ingress annotations
##
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     kubernetes.io/tls-acme: "true"

## Geoclient Ingress hostnames
## Must be provided if Ingress is enabled
##
#  hosts:
#    - name: geoclient.domain1.com
#      path: /
#      tls: false
#    - name: geoclient.domain2.com
#      path: /
#
#      ## Set this to true in order to enable TLS on the ingress record
#      tls: true
#
#      ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
#      ## Secrets must be added manually to the namespace
#      tlsSecret: geoclient.domain2-tls

####
## The rest of this file was generated by `jx import` command
####

## enable this flag to use knative serve to deploy the app
#knativeDeploy: false

## HorizontalPodAutoscaler
#hpa:
#  enabled: false
#  minReplicas: 2
#  maxReplicas: 6
#  cpuTargetAverageUtilization: 80
#  memoryTargetAverageUtilization: 80

## Canary deployments
## If enabled, Istio and Flagger need to be installed in the cluster
#canary:
#  enabled: false
#  progressDeadlineSeconds: 60
#  canaryAnalysis:
#    interval: "1m"
#    threshold: 5
#    maxWeight: 60
#    stepWeight: 20
#    # WARNING: Canary deployments will fail and rollback if there is no traffic that will generate the below specified metrics.
#    metrics:
#      requestSuccessRate:
#        threshold: 99
#        interval: "1m"
#      requestDuration:
#        threshold: 1000
#        interval: "1m"
#  # The host is using Istio Gateway and is currently not auto-generated
#  # Please overwrite the `canary.host` in `values.yaml` in each environment repository (e.g., staging, production)
#  host: acme.com

#service:
#  name: geoclient
#  type: ClusterIP
#  externalPort: 8080
#  internalPort: 8080
#  annotations:
#    fabric8.io/expose: "true"
#    fabric8.io/ingress.annotations: "kubernetes.io/ingress.class: nginx"
#resources:
#  limits:
#    cpu: 500m
#    memory: 512Mi
#  requests:
#    cpu: 400m
#    memory: 512Mi
#probePath: /actuator/health
#livenessProbe:
#  initialDelaySeconds: 60
#  periodSeconds: 10
#  successThreshold: 1
#  timeoutSeconds: 1
#readinessProbe:
#  failureThreshold: 1
#  periodSeconds: 10
#  successThreshold: 1
#  timeoutSeconds: 1

## custom ingress annotations on this service
#ingress:
#  annotations:
#      kubernetes.io/ingress.class: nginx

## values used from the `jx-requirements.yml` file if we are using helmfile and helm 3
#jxRequirements:
#  ingress:
#    domain: ""
#    externalDNS: false
#    namespaceSubDomain: -jx.
#    tls:
#      email: ""
#      enabled: false
#      production: false
#
#    # Generated by jx:
#    # For Kubernetes v1.14+, use 'networking.k8s.io/v1beta1'
#    #apiVersion: "extensions/v1beta1"
#    apiVersion: "networking.k8s.io/v1beta1"
#    # shared ingress annotations on all services
#    annotations:
#    #  kubernetes.io/ingress.class: nginx
