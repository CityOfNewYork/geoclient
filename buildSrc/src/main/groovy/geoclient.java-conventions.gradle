plugins {
    id 'java'
    id 'checkstyle'
    id 'project-report'
    id 'com.diffplug.spotless'
    // Note: usage of versions plugin dependencyUpdates task emits
    // deprecation warnings.
    id 'com.github.ben-manes.versions'
}


ext {
    // Default Manifest for Jar tasks. Referenced by the default Jar task
    // configuration defined in the geoclient.library-conventions script.
    // Declared here because geoclient-service does not apply the
    // geoclient.library-conventions plugin but does apply this one.
    // This allows the bootJar task to merge this manifest with the one
    // created by the Sping Boot plugin.
    // Note:
    // 'Automatic-Module-Name' is for Jigsaw.
    // 'Include-Resource' refers to files in licenseFileSpec below.
    sharedManifest = java.manifest {
           attributes(
               'Implementation-Title': project.name,
               'Implementation-Version': project.version,
               'Automatic-Module-Name': project.name.replace('-', '.'),
               'Build-Jdk-Spec': "${System.getProperty("java.specification.version")}",
               'Built-Gradle': gradle.gradleVersion,
               'Include-Resource': 'META-INF/notice.txt=notice.txt,META-INF/license.txt=license.txt')
    }
    // License for published artifacts.
    // Note:
    // The spotless plugin is responsible for adding the license as a
    // comment to java source files.
    licenseFilesSpec = copySpec {
        from("${project.rootDir}/src/dist") {
            include 'license.txt'
            include 'notice.txt'
            into 'META-INF'
            expand(copyright: new Date().format('yyyy'), version: project.version)
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Platforms
    implementation(platform(libs.spring.boot.dependencies))
    testImplementation(platform(libs.junit.bom))
    // Dependencies
    implementation('org.springframework.boot:spring-boot-starter-logging')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.junit.jupiter:junit-jupiter')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')
    //// Avoids log warning generated because of JUnit dependency on apiguardian:
    //// 'warning: unknown enum constant Status.STABLE'
    //// This was supposed to have been fixed in JUnit 5.1.x, but still happens,
    //// possibly because gradle platform or spring BOM.
    testRuntimeOnly(libs.apiguardian.api)
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withJavadocJar()
    withSourcesJar()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

javadoc {
    description = 'Generates project-level javadoc for use in -javadoc jar'

    options.addStringOption('Xdoclint:none', '-quiet')
    options.author = true
    options.encoding = 'UTF-8'
    options.header = project.name
    options.memberLevel = JavadocMemberLevel.PROTECTED
    options.noTimestamp = true
    options.use = true

    // Suppress warnings due to cross-module @see and @link references.
    // Note that global "api" task does display all warnings.
    logging.captureStandardError LogLevel.INFO
    logging.captureStandardOutput LogLevel.INFO  // suppress "## warnings" message
}

spotless {
    java {
        // based on JUnit5 project's spotless config (commit 3a2f7a342747dd504d70daf89a0db53145e94608)
        // eclipse().configFile rootProject.file('src/spotless/geoclient-eclipse-formatter-settings.xml')
        // endWithNewline()
        importOrderFile(rootProject.file('src/spotless/geoclient-eclipse.importorder'))
        indentWithSpaces()
        licenseHeaderFile(rootProject.file('src/spotless/apache-license-2.0.java'))
        trimTrailingWhitespace()
        toggleOffOn()
    }
    groovy {
        target '**/*.groovy'
        targetExclude '**/build/**'
        licenseHeaderFile rootProject.file('src/spotless/apache-license-2.0.java')
    }
    groovyGradle {}
}
