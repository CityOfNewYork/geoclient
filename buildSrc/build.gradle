plugins {
    id 'groovy-gradle-plugin'
    id 'java-gradle-plugin'
    id 'checkstyle'
    id 'project-report'
    alias(libs.plugins.spotless)
    // Note: usage of versions plugin dependencyUpdates task emits
    // deprecation warnings.
    alias(libs.plugins.versions)
}

repositories {
    gradlePluginPortal()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.addAll("-Werror", "-Xlint:unchecked", "-Xlint:deprecation", "-Xlint:rawtypes","-Xlint:varargs")
}

dependencies {
    implementation libs.spotless.plugin
    implementation libs.gradle.versions.plugin
    // Platforms
    implementation(platform(libs.spring.boot.dependencies))
    testImplementation(platform(libs.junit.bom))
    // Dependencies
    implementation('org.springframework.boot:spring-boot-starter-logging')
    implementation libs.httpclient
    implementation libs.jackson.databind
    testImplementation gradleTestKit()
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test', Test) {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
    environment('GEOCLIENT_BASE_URI', 'https://maps.nyc.gov/geoclient/v2')
    environment('JAVA_USE_SYSTEM_PROXY', 'true')
}

gradlePlugin {
    plugins {
        documentationPlugin {
            id = 'geoclientbuild-docs'
            implementationClass = 'geoclientbuild.docs.DocumentationPlugin'
        }
    }
}